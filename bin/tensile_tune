#!/bin/sh

set -e

istart=$(date +%s)

TENSILE_DIR=src/Tensile
DEVICE=0
#DEVICE=${1:-0}
CONFIGS=$1
OUT_DIR=${2:-out}
BUILD_DIR=$OUT_DIR/build

if [ $# -lt 1 ]; then
    echo "Usage: tensile_tune <path/to/yaml/or/yaml dir> [output dir]"
    exit 1
fi

rm -rf ${OUT_DIR}
mkdir -p $BUILD_DIR

# download tensile
if [ ! -d "$TENSILE_DIR" ]; then
	git clone https://github.com/ROCmSoftwarePlatform/Tensile.git $TENSILE_DIR
fi

# copy & setup configs
if [ -d $CONFIGS ]; then
    CONFIGS=`find $CONFIGS -name \*.yaml`
fi

# pinclock
#/opt/rocm/bin/rocm-smi -d $DEVICE --setsclk 5

# tensile training
for o in $CONFIGS
do
	FILE_NAME=${o##*/}
	BASE_NAME=${FILE_NAME%%.*}
	OUT_PATH=$BUILD_DIR/$BASE_NAME
	sed -i "s/^\(  Device:\).*/\1 $DEVICE/g" $o
	sed -i "s/^\(  PinClocks:\).*/\1 False/g" $o
	$TENSILE_DIR/Tensile/bin/Tensile $o $OUT_PATH
done

# merge logic
ROCBLAS_DIR=src/rocBLAS
MERGE_TOOL=$TENSILE_DIR/Tensile/Utilities/merge_rocblas_yaml_files.py
ARCHIVE_DIR=$ROCBLAS_DIR/library/src/blas3/Tensile/Logic/archive
ASM_FULL_DIR=$ROCBLAS_DIR/library/src/blas3/Tensile/Logic/asm_full
WORK_DIR=$BUILD_DIR/workdir
BASE_DIR=$WORK_DIR/base
NEW_DIR=$WORK_DIR/new
MERGED_DIR=$WORK_DIR/merged
mkdir -p $BASE_DIR
mkdir -p $NEW_DIR
mkdir -p $MERGED_DIR

if [ ! -d "$ROCBLAS_DIR" ]; then
	git clone https://github.com/ROCmSoftwarePlatform/rocBLAS.git $ROCBLAS_DIR
fi

YAMLS=`find $BUILD_DIR/*/3_LibraryLogic -name *.yaml`

for o in $YAMLS
do
	FILE_NAME=${o##*/}
	BASE_FILE=$ARCHIVE_DIR/$FILE_NAME
	if [ ! -f "$BASE_FILE" ]; then
		BASE_FILE=$ASM_FULL_DIR/$FILE_NAME
	fi
	cp $o $NEW_DIR -v
	cp $BASE_FILE $BASE_DIR -v
done

python3 $MERGE_TOOL $BASE_DIR $NEW_DIR $MERGED_DIR

# massage logic
MASSAGE_TOOL=$ROCBLAS_DIR/library/src/blas3/Tensile/Logic/archive/massage.py
MASSAGED_DIR=$WORK_DIR/massaged
mkdir -p $MASSAGED_DIR

python3 $MASSAGE_TOOL $MERGED_DIR $MASSAGED_DIR

# build rocBLAS
cd $ROCBLAS_DIR && ./install.sh -dc && cd -

iend=$(date +%s)

echo ""
echo ""
echo "Build done."
echo "The total time: $(( iend - istart )) seconds."

